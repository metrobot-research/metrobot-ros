<launch>
  <arg name="device_type_camera1"    		default="t265"/>
  <arg name="device_type_camera2"    		default="d4.5"/>		<!-- Note: using regular expression. match D435, D435i, D415... -->
  <arg name="serial_no_camera1"    			default=""/>
  <arg name="serial_no_camera2"    			default=""/>
  <arg name="camera1"              			default="t265"/>
  <arg name="camera2"              			default="d435i"/>
  <arg name="tf_prefix_camera1"         default="$(arg camera1)"/>
  <arg name="tf_prefix_camera2"         default="$(arg camera2)"/>
  <arg name="initial_reset"             default="false"/>
  <arg name="reconnect_timeout"         default="6.0"/>

  <!-- TODO: rqt_reconfigure params like exposure rates can be specified here with their names as topics in rqt_reconfigure -->

  <!-- Cam 1: t265 -->
  <!-- gyro 200 hz, accel 62 hz, pose 200 hz, fisheye 30 hz -->
  <arg name="camera1_enable_fisheye"            default="false"/>
  <arg name="camera1_fisheye_fps"            default="30"/>
  <arg name="camera1_enable_accel"            default="true"/>
  <arg name="camera1_accel_fps"            default="62"/>
  <arg name="camera1_enable_gyro"            default="true"/>
  <arg name="camera1_gyro_fps"            default="200"/>
  <arg name="topic_odom_in"             default="odom_in"/>
  <arg name="calib_odom_file"           default=""/>

  <!-- Cam 2: d435i -->
  <!-- gyro 200/400 hz, accel 63/250 hz, depth 15/30 hz, color 15/30 hz -->
  <arg name="camera2_enable_accel"            default="false"/>
  <arg name="camera2_accel_fps"            default="250"/>
  <arg name="camera2_enable_gyro"            default="true"/>
  <arg name="camera2_gyro_fps"            default="200"/>
  <arg name="camera2_align_depth"            default="true"/>
  <arg name="camera2_color_width"               default="1280"/>
  <arg name="camera2_color_height"              default="720"/>
  <arg name="camera2_color_fps"              default="30"/>
  <arg name="camera2_depth_width"               default="$(arg camera2_color_width)"/>
  <arg name="camera2_depth_height"              default="$(arg camera2_color_height)"/>
  <arg name="camera2_depth_fps"              default="$(arg camera2_color_fps)"/>
  <arg name="camera2_clip_distance"             default="-2"/>
  <arg name="camera2_filters"              default="pointcloud,decimation,disparity,spatial,temporal"/>


  <group ns="$(arg camera1)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="device_type"           value="$(arg device_type_camera1)"/>
      <arg name="serial_no"             value="$(arg serial_no_camera1)"/>
      <arg name="tf_prefix"         		value="$(arg tf_prefix_camera1)"/>
      <arg name="initial_reset"         value="$(arg initial_reset)"/>
      <arg name="reconnect_timeout"     value="$(arg reconnect_timeout)"/>
      <arg name="enable_fisheye1"       value="$(arg camera1_enable_fisheye)"/>
      <arg name="enable_fisheye2"       value="$(arg camera1_enable_fisheye)"/>
      <arg name="fisheye_fps"       value="$(arg camera1_fisheye_fps)"/>
      <arg name="enable_accel"          value="$(arg camera1_enable_accel)"/>
      <arg name="accel_fps"          value="$(arg camera1_accel_fps)"/>
      <arg name="enable_gyro"           value="$(arg camera1_enable_gyro)"/>
      <arg name="gyro_fps"          value="$(arg camera1_gyro_fps)"/>
      <arg name="topic_odom_in"         value="$(arg topic_odom_in)"/>
      <arg name="calib_odom_file"       value="$(arg calib_odom_file)"/>
      <arg name="enable_pose"           value="true"/>
    </include>
  </group>

  <group ns="$(arg camera2)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="device_type"           value="$(arg device_type_camera2)"/>
      <arg name="serial_no"             value="$(arg serial_no_camera2)"/>
      <arg name="tf_prefix"		          value="$(arg tf_prefix_camera2)"/>
      <arg name="initial_reset"         value="$(arg initial_reset)"/>
      <arg name="reconnect_timeout"     value="$(arg reconnect_timeout)"/>
      <arg name="align_depth"           value="$(arg camera2_align_depth)"/> <!-- depth cloud aligned and pub.ed in color frame -->
      <arg name="filters"               value="$(arg camera2_filters)"/>
      <arg name="color_width"           value="$(arg camera2_color_width)"/>
      <arg name="color_height"          value="$(arg camera2_color_height)"/>
      <arg name="color_fps"          value="$(arg camera2_color_fps)"/>
      <arg name="depth_width"           value="$(arg camera2_depth_width)"/>
      <arg name="depth_height"          value="$(arg camera2_depth_height)"/>
      <arg name="depth_fps"          value="$(arg camera2_depth_fps)"/>
      <arg name="clip_distance"         value="$(arg camera2_clip_distance)"/>
      <arg name="enable_accel"          value="$(arg camera2_enable_accel)"/>
      <arg name="accel_fps"          value="$(arg camera2_accel_fps)"/>
      <arg name="enable_gyro"           value="$(arg camera2_enable_gyro)"/>
      <arg name="gyro_fps"          value="$(arg camera2_gyro_fps)"/>
    </include>
  </group>

  <!-- Loads the camera model -->
  <node pkg="tf" type="static_transform_publisher" name="d435i_camera_link_to_base_link" args="-0.0106 -0.0175 -0.0125 0 0 0 /$(arg tf_prefix_camera2)_link /base_link 100"/> <!-- trans xyz in m, rot zyx in rad, multiplied from left to right -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find realsense2_description)/urdf/test_d435i_camera.urdf.xacro' use_nominal_extrinsics:=false"/> <!-- d435 is enough, "i" means contain IMU -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/> <!-- publish tfs specified by the above urdf, which are internal tfs of d435 -->

  <node pkg="tf" type="static_transform_publisher" name="t265_to_d400" args="0 0.01 -0.028 0 0 0 /$(arg tf_prefix_camera1)_link /$(arg tf_prefix_camera2)_link 100"/> <!-- trans xyz in m, rot zyx in rad, multiplied from left to right -->
  <node pkg="tf" type="static_transform_publisher" name="d400_to_d400center" args="0 -0.015 0 0 0 0 /$(arg tf_prefix_camera2)_link /$(arg tf_prefix_camera2)_center 100"/> <!-- trans xyz in m, rot zyx in rad, multiplied from left to right -->

<!--  <node pkg="rviz" name="rviz" type="rviz" args="-d $(find realsense2_camera)/rviz/d435i_and_t265.rviz" output="screen"/>-->
</launch>
